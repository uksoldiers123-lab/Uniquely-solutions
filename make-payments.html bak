<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <title>Make a Payment — Uniquity Solutions</title>
  <meta name="description" content="Pay an invoice or statement securely with Uniquity Solutions. Card or ACH, PCI-compliant, instant confirmation." />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="styles.css?v=8">
</head>
<body>
  <!-- Navbar and content as in your file... (omitted here for brevity) -->

  <!-- Make a Payment form (existing markup retained) -->
  <form id="payment-form" action="#" method="post" novalidate>
    <!-- existing payer info fields -->
    <fieldset class="fieldset">
      <legend>Payer information</legend>
      <div class="field">
        <label for="payerName">Full name</label>
        <input id="payerName" name="payerName" type="text" autocomplete="name" required>
      </div>
      <div class="field">
        <label for="payerEmail">Email for receipt</label>
        <input id="payerEmail" name="payerEmail" type="email" autocomplete="email" required>
      </div>
      <div class="field">
        <label for="payerPhone">Phone (optional)</label>
        <input id="payerPhone" name="payerPhone" type="tel" autocomplete="tel">
      </div>
    </fieldset>

    <fieldset class="fieldset">
      <legend>Payment details</legend>
      <div class="field">
        <label for="invoiceNumber">Invoice or account number</label>
        <input id="invoiceNumber" name="invoiceNumber" type="text" required>
      </div>
      <div class="field">
        <label for="amount">Amount (USD)</label>
        <input id="amount" name="amount" type="number" step="0.01" min="1" inputmode="decimal" required>
      </div>
      <div class="field">
        <label for="memo">Memo (optional)</label>
        <input id="memo" name="memo" type="text" maxlength="120" placeholder="Add a note for the merchant">
      </div>
    </fieldset>

    <fieldset class="fieldset">
      <legend>Payment method</legend>
      <div class="field inline">
        <label class="radio">
          <input type="radio" name="method" value="card" checked>
          <span>Card</span>
        </label>
        <label class="radio">
          <input type="radio" name="method" value="ach">
          <span>Bank (ACH)</span>
        </label>
      </div>

      <!-- Hosted fields placeholder / real integration would mount here -->
      <div class="hosted-fields" id="hosted-fields" aria-hidden="false">
        <!-- Card fields would be mounted by Stripe.js or your gateway -->
        <div class="field">
          <label for="cardNumber">Card number</label>
          <input id="cardNumber" name="cardNumber" inputmode="numeric" autocomplete="cc-number" placeholder="•••• •••• •••• ••••" required>
        </div>
        <div class="field group">
          <div>
            <label for="cardExp">Expiration</label>
            <input id="cardExp" name="cardExp" inputmode="numeric" autocomplete="cc-exp" placeholder="MM/YY" required>
          </div>
          <div>
            <label for="cardCvc">CVC</label>
            <input id="cardCvc" name="cardCvc" inputmode="numeric" autocomplete="cc-csc" placeholder="CVC" required>
          </div>
        </div>
        <div class="field">
          <label for="billingZip">Billing ZIP</label>
          <input id="billingZip" name="billingZip" inputmode="numeric" autocomplete="postal-code" required>
        </div>
      </div>

      <div class="ach-fields" id="ach-fields" hidden>
        <div class="field">
          <label for="routing">Routing number</label>
          <input id="routing" name="routing" inputmode="numeric" autocomplete="off">
        </div>
        <div class="field">
          <label for="account">Account number</label>
          <input id="account" name="account" inputmode="numeric" autocomplete="off">
        </div>
        <p class="help">For production, use tokenized flows instead of plain inputs.</p>
      </div>
    </fieldset>

    <div class="field checkbox">
      <label>
        <input id="agree" name="agree" type="checkbox" required>
        <span>I authorize this payment and agree to the terms of service and refund policy.</span>
      </label>
    </div>

    <div class="actions">
      <button type="submit" class="btn btn-primary" id="payButton">Continue to secure checkout</button>
      <p class="help small">You’ll review your details before submitting. Do not include sensitive data in the memo field.</p>
    </div>

    <div class="form-status" aria-live="polite"></div>
  </form>

  <!-- Include frontend config and API helpers -->
  <script src="assets/js/config.js"></script>
  <script src="assets/js/api.js"></script>

  <script>
    (async function initPaymentFlow() {
      try {
        // Build payload as your backend expects (amount, currency, invoice, etc.)
        const payload = {
          amount: document.getElementById('amount').value || 0,
          currency: 'usd',
          invoiceNumber: document.getElementById('invoiceNumber').value || ''
        };

        const resp = await fetch(window.UNIQUITY_CONFIG.baseUrl + '/create-payment-intent', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            // Include apiKey only if you publicly require it
            'x-api-key': window.UNIQUITY_CONFIG.apiKey || ''
          },
          body: JSON.stringify(payload)
        });

        const data = await resp.json();
        // data.clientSecret should be provided by backend
        // Initialize Stripe Elements or hosted fields with data.clientSecret as needed
        // Example (pseudo):
        // const stripe = Stripe(window.UNIQUITY_CONFIG.stripePublishableKey);
        // const elements = stripe.elements();
        // const card = elements.create('card');
        // card.mount('#card-element');
        // Save clientSecret for confirmCardPayment on form submit

      } catch (err) {
        console.error('Failed to initialize payment', err);
      }
    })();
  </script>
</body>
</html>
